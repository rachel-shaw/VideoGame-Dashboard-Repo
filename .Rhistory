group_by(release_year) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales")
units_sales_db <- summary_sales_db %>%
full_join(summary_avgsales_db, by = join_by(release_year, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales") %>%
filter(Metric == "Total")
ggplot(unitssold_datasetInput())  +
geom_line(aes(x=release_year, y=Sales, color = "Region"))
ggplot(units_sales_db)  +
geom_line(aes(x=release_year, y=Sales, color = "Region"))
ggplot(units_sales_db)  +
geom_line(aes(x=release_year, y=Sales, color = factor(Region)))
runApp()
units_sales_db <- summary_sales_db %>%
full_join(summary_avgsales_db, by = join_by(release_year, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales") %>%
filter(!Region == "Global") %>%
filter(Metric == "Total")
ggplot(units_sales_db)  +
geom_line(aes(x=release_year, y=Sales, color = factor(Region)))
summary_sales_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
summary_avgsales_db <- videogamesales_db %>%
group_by(release_year) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales")
units_sales_db <- summary_sales_db %>%
full_join(summary_avgsales_db, by = join_by(release_year, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")  %>%
filter(!Region == "Global")
units_sales_db <- summary_sales_db %>%
full_join(summary_avgsales_db, by = join_by(release_year, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")  %>%
filter(!Region == "Global") %>%
filter(Metric == "Total")
ggplot(units_sales_db)  +
geom_line(aes(x=release_year, y=Sales, color = factor(Region)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(summary_avgsales_db)
runApp()
runApp()
runApp()
runApp()
avg_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(avg_productioncost = mean(`Production Cost`))
View(avg_productioncost_db)
runApp()
runApp()
runApp()
top_sales_db <- summary_sales_db %>%
select(-sum_global_sales) %>%
rename(Asia = sum_asia_sales,
Europe = sum_europe_sales,
`North America` = sum_namerica_sales,
Japan = sum_japan_sales) %>%
pivot_longer(cols = c(Asia, `North America`, Europe, Japan),
names_to = "region", values_to = "sales") %>%
arrange(desc(sales)) %>%
relocate(sales, .before = region) %>%
slice_head(n=5)
View(summary_sales_db)
top_sales_db <- summary_sales_db %>%
filter(!Region == "Global") %>%
relocate(`Total Sales`, .before = Region) %>%
arrange(desc(Total Sales`))
top_sales_db <- summary_sales_db %>%
filter(!Region == "Global") %>%
relocate(`Total Sales`, .before = Region)
View(top_sales_db)
top_sales_db
top_sales_db <- summary_sales_db %>%
filter(!Region == "Global") %>%
relocate(`Total Sales`, .before = Region) %>%
arrange(desc(`Total Sales`))
top_sales_db <- summary_sales_db %>%
filter(!Region == "Global") %>%
relocate(`Total Sales`, .before = Region) %>%
arrange(desc(`Total Sales`)) %>%
slice_head(n=5)
top_sales_db %>%
kable("html",
align = 'c',
col.names = c("Year",
"Total Units Sold",
"Region")) %>%
kable_styling(c("striped", "hover"), full_width = T, position = "center")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
total_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(productioncost = sum(`Production Cost`))
avg_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(productioncost = mean(`Production Cost`))
View(top_avg_sales_db)
total_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(productioncost = sum(`Production Cost`))
avg_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(productioncost = mean(`Production Cost`))
top_avg_sales_db <- avg_productioncost_db
top_prodcost_db <- total_productioncost_db
View(top_prodcost_db)
top_prodcost_db <- total_productioncost_db
top_prodcost_db <- total_productioncost_db %>%
rename(`Production Cost` = productioncost,
Year = release_year) %>%
arrange(desc(`Production Cost`))
top_prodcost_db <- total_productioncost_db %>%
rename(`Production Cost` = productioncost,
Year = release_year) %>%
arrange(desc(`Production Cost`)) %>%
slice_head(n=5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("Video Game Units Sold Across Regions", "\n", "Select a metric below to view results.")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summary_sales_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
summary_avgsales_db <- videogamesales_db %>%
group_by(release_year) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales")
units_sales_db <- summary_sales_db %>%
full_join(summary_avgsales_db, by = join_by(release_year, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")  %>%
filter(!Region == "Global")
test <- units_sales_db %>% filter(Metric == "Total") %>% filter(release_year %in% c(2000:2010)
)
test <- units_sales_db %>% filter(Metric == "Total") %>% filter(release_year %in% c(2000:2010))
g <- ggplot(test,
aes(y = Sales,
x = release_year,
color= factor(Region)))
g + geom_line(size = 1) +
labs(x="Year",
y="Millions of Copies Sold",
color = "Regions") +
ggtitle(paste(input$units_sold, "Video Game Units Sold Across Regions")) +
theme_bw() +
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 14, vjust = 1.3),
axis.title.y = element_text(size = 14, vjust = 1.3),
axis.text = element_text(size = 12))
test <- units_sales_db %>% filter(Metric == "Total") %>% filter(release_year %in% c(2000:2010))
g <- ggplot(test,
aes(y = Sales,
x = release_year,
color= factor(Region)))
g + geom_line(size = 1) +
labs(x="Year",
y="Millions of Copies Sold",
color = "Regions") +
ggtitle(paste("Video Game Units Sold Across Regions")) +
theme_bw() +
theme(plot.title = element_text(size=16, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 14, vjust = 1.3),
axis.title.y = element_text(size = 14, vjust = 1.3),
axis.text = element_text(size = 12))
runApp()
runApp()
runApp()
2000:2020
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
runApp()
runApp()
runApp()
runApp()
paste("Top Five Years Between", "input$UnitsSold_YearRange[1]", "and", "input$UnitsSold_YearRange[2]")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
top_prodcost_db <- total_productioncost_db %>%
rename(`Production Cost` = productioncost,
Year = release_year) %>%
arrange(desc(`Production Cost`))
View(top_prodcost_db)
runApp()
runApp()
