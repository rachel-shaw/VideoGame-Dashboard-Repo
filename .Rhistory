Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region)
platform_titleyear_table_df %>%
ungroup() %>%
#filter(Region %in% input$checkGroup) %>%
group_by(title, platform) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`))
#table
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region)
platform_titleyear_table_df <- platform_titleyear_table_df %>%
ungroup() %>%
#filter(Region %in% input$checkGroup) %>%
group_by(title, platform) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`))
platform_titleyear_table_df
platform_titleyear_table_df <- platform_titleyear_table_df
slice_head(n=10)
platform_titleyear_table_df <- platform_titleyear_table_df %>%
slice_head(n=10)
platform_titleyear_table_df
platform_titleyear_table_df <- platform_titleyear_table_df %>%
ungroup() %>%
slice_head(n=10)
platform_titleyear_table_df
runApp()
runApp()
#table
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region)
platform_titleyear_table_df
runApp()
unique(videogamesales_db$platform)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
total_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(`Production Cost` = sum(`Production Cost`)) %>%
mutate(`Production Cost` = scales::dollar(`Production Cost`))
total_productioncost_db
avg_productioncost_db <- videogamesales_db %>%
group_by(release_year) %>%
summarise(`Production Cost` = mean(`Production Cost`)) %>%
mutate(`Production Cost` = as.double(formatC(as.double(as.character(round(`Production Cost`, 2))), digits = 2, format = "f"))) %>%
mutate(`Production Cost` = scales::dollar(`Production Cost`))
avg_productioncost_db
runApp()
runApp()
runApp()
runApp()
unique(videogamesales_db$genre
)
runApp()
runApp()
runApp()
runApp()
runApp()
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region) %>%
relocate(Region, .after = platform)
platform_titleyear_table_df
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
platform_titleyear_table_df
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region)
platform_titleyear_table_df
runApp()
platform_titleyear_table_df
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region) %>%
relocate(platform, .before = Region)
platform_titleyear_table_df
platform_titleyear_table_df <- videogamesales_db %>%
group_by(platform, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region)
platform_titleyear_table_df %>%
ungroup() %>%
#filter(Region %in% input$checkGroup) %>%
#filter(platform %in% input$checkGroup_platform) %>%
group_by(title, platform, Region) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`)) %>%
ungroup() %>%
slice_head(n=10) %>%
relocate(platform, .after = Sales)
platform_titleyear_table_df %>%
ungroup() %>%
#filter(Region %in% input$checkGroup) %>%
#filter(platform %in% input$checkGroup_platform) %>%
group_by(title, platform, Region) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`)) %>%
ungroup() %>%
slice_head(n=10) %>%
relocate(platform, .after = Sales) %>%
relocate(Region, .after = Sales)
platform_titleyear_table_df %>%
ungroup() %>%
#filter(Region %in% input$checkGroup) %>%
#filter(platform %in% input$checkGroup_platform) %>%
group_by(title, platform, Region) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`)) %>%
ungroup() %>%
slice_head(n=10) %>%
relocate(platform, .after = Sales) %>%
relocate(Region, .after = platform)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
genre_titleyear_table_df <- videogamesales_db %>%
group_by(genre, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region) %>%
relocate(Region, .after = genre)
genre_titleyear_table_df
runApp()
genre_titleyear_table_df <- videogamesales_db %>%
group_by(genre, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region) %>%
relocate(Region, .after = genre)
genre_titleyear_table_df
genre_titleyear_table_df %>%
ungroup() %>%
# filter(Region %in% input$checkGroup_genre_region) %>%
#filter(genre %in% input$checkGroup_genre_genre) %>%
group_by(title, genre, Region) %>%
summarise(Sales = sum(Sales)) %>%
arrange(desc(`Sales`)) %>%
ungroup() %>%
slice_head(n=10) %>%
relocate(genre, .after = Sales) %>%
relocate(Region, .after = platform) %>%
kable(format ="html", align = 'c', col.names = c("Title", "Units Sold*", "Genre", "Region")) %>%
kable_styling(c("striped", "hover"), font_size = 16, full_width = T, position = "center") %>%
add_footnote(("in millions of copies"), notation = "symbol")
#table
genre_titleyear_table_df <- videogamesales_db %>%
group_by(genre, title) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
relocate(`Sales`, .before = Region) %>%
relocate(Region, .after = genre)
genre_titleyear_table_df
runApp()
runApp()
runApp()
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", input$genre_units_sold, "Sales: ", round(`Sales`, digits = 2)))) +
geom_area(stat='identity') +
labs(x="Genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(input$genre_units_sold, "Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9, angle = 45, vjust = 0.5, hjust=1))
#data
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_avg_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", input$genre_units_sold, "Sales: ", round(`Sales`, digits = 2)))) +
geom_area(stat='identity') +
labs(x="Genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(input$genre_units_sold, "Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9, angle = 45, vjust = 0.5, hjust=1))
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", input$genre_units_sold, "Sales: ", round(`Sales`, digits = 2)))) +
geom_area(stat='identity') +
labs(x="Genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9, angle = 45, vjust = 0.5, hjust=1))
ggplotly(g, tooltip = "text")
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_area(stat='identity') +
labs(x="Genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9, angle = 45, vjust = 0.5, hjust=1))
ggplotly(g, tooltip = "text")
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_area(stat='identity') +
labs(x="Genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9, angle = 45, vjust = 0.5, hjust=1))
ggplot(genre_total_unitsperregion_db, aes(x = "", y = Sales, fill = Genre)) +
geom_col(color = "black") +
geom_label(aes(label = Genre),
color = "white",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
ggplot(genre_total_unitsperregion_db, aes(x = "", y = Sales, fill = genre)) +
geom_col(color = "black") +
geom_label(aes(label = genre),
color = "white",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
runApp()
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = "",
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_col(color = "black") +
geom_label(aes(label = genre),
color = "white",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
g
runApp()
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_total_unitsperregion_db
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(Sales = Sales/(sum(Sales)))
genre_total_unitsperregion_db
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(Sales = (Sales/(sum(Sales))*100))
genre_total_unitsperregion_db
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_total_unitsperregion_db
runApp()
runApp()
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = "",
x = genre,
fill = genre,
group = 1,
text = paste("Genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_col(color = "black") +
geom_label(aes(label = genre),
color = "white",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y")
runApp()
runApp()
runApp()
runApp()
runApp('~/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo')
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_total_unitsperregion_db
colmap <-
c("#bdb2ff", "#ffc6ff", "#33658A", "#3a506b", "#577590", "#43aa8b", "#90be6d", "#f8961e")
genre_total_unitsperregion_db %>%
mutate(Sales = (Sales/(sum(Sales))*100)) %>%
ggplot(aes(x = "", y = Sales, fill = genre)) +
geom_bar(
stat = "identity",
width = 1,
color = "black",
size = 1
) +
theme_void() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
coord_polar("y", start = 0) +
scale_fill_manual(values = c(colmap)) +
labs(title = "test")
runApp()
runApp()
runApp()
runApp()
runApp()
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_avg_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
genre_avg_unitsperregion_db
runApp()
