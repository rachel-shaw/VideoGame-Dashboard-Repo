install.packages("tidyverse")
install.packages("rgal")
shiny::runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Library/CloudStorage/OneDrive-Personal/Documents/Job Stuff/Job Portfolio Projects/RShiny Demo",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo/",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo/",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo/",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
shiny::runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
#import data
#videogamesales_db <- read_excel("video_game_sales_cleaned.xlsx")
videogamesales_db <- readRDS("video_game_sales_cleaned.rds")
setwd("/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo/rscripts")
#import data
#videogamesales_db <- read_excel("video_game_sales_cleaned.xlsx")
videogamesales_db <- readRDS("video_game_sales_cleaned.rds")
setwd("/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo")
#import data
#videogamesales_db <- read_excel("video_game_sales_cleaned.xlsx")
videogamesales_db <- readRDS("video_game_sales_cleaned.rds")
#data
genre_total_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
genre_avg_unitsperregion_db <- videogamesales_db %>%
group_by(genre) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
genre_avg_unitsperregion_db
runApp()
runApp()
runApp()
g <- ggplot(genre_unitsperregion_datasetInput, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020"))
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity')
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity')
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y", start = 0)
runApp()
runApp()
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y", start = 0)
ggplotly(g, tooltip = "text")
runApp()
g <- ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y", start = 0)
runApp()
genre_total_unitsperregion_db %>%
filter(Region == "North America")
genre_total_unitsperregion_db %>%
filter(Region == "North America") %>%
mutate(Sales = (Sales/(sum(Sales)))*100)
genre_total_unitsperregion_db %>%
filter(Region == "North America") %>%
mutate(Sales = (Sales/(sum(Sales)))*100) %>%
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y", start = 0)
genre_total_unitsperregion_db <- genre_total_unitsperregion_db %>%
filter(Region == "North America") %>%
mutate(Sales = (Sales/(sum(Sales)))*100)
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y", start = 0)
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = genre,
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity', size = 1) +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity', size = 1) +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
#theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_bw() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_void() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
runApp()
ggplot(genre_total_unitsperregion_db, #genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre,
group = 1,
text = paste("genre: ", genre,
"<br>Region: ", Region,
"<br>", #input$genre_units_sold,
"Sales: ", round(`Sales`, digits = 2)))) +
geom_bar(stat='identity') +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(#input$genre_units_sold,
"Video Game Sales 2000-2020")) +
theme_void() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right",
axis.title.x = element_text(size = 10, vjust = 1.3),
axis.title.y = element_text(size = 10, vjust = 1.3),
axis.text = element_text(size = 9)) +
coord_polar("y")
ggplotly(g, tooltip = "text")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#data
genre_sales_total_db <- videogamesales_db %>%
group_by(release_year, genre) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
genre_sales_average_db <- videogamesales_db %>%
group_by(release_year, genre) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
genre_sales_totalavg_sum_db <- genre_sales_total_db %>%
full_join(genre_sales_average_db, by = join_by(release_year, genre, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")
genre_sales_total_db
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(genre_unitsperregion_datasetInput(),
aes(y = Sales,
x = "",
fill = genre)) +
geom_bar(stat='identity', width=1, color="white") +
labs(x="genre",
y="Number of Games Sold (in millions)",
color = "genre") +
ggtitle(paste(input$genre_unitsperregion, "Video Game Sales 2000-2020")) +
theme_void() +
theme(plot.title = element_text(size=14, face="bold", hjust = 0.5),
legend.position = "right") +
scale_fill_discrete(name = "Genre")+
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(Sales, "%")), position = position_stack(vjust=0.5), color = "white", size = 5)
runApp()
runApp()
runApp()
#deploy app
rsconnect::setAccountInfo(name='shawprojects',
token='760D39FCAEBB0CBBA181F3679BE8E6F3',
secret='6W88PpFX7Nk+DBymuBpFt62sTpOmYVTs4nBmWelx')
rsconnect::deployApp(appDir="/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo/",
appName = "Video-Game-Dashboard",
forceUpdate = TRUE,
account = "shawprojects",
upload = TRUE)
