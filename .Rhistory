install.packages("tidyverse")
install.packages("rgal")
shiny::runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
runApp('Documents/GitHub/VideoGame-Dashboard-Repo')
#import data
#videogamesales_db <- read_excel("video_game_sales_cleaned.xlsx")
videogamesales_db <- readRDS("video_game_sales_cleaned.rds")
setwd('/Users/rachel/Documents/GitHub/VideoGame-Dashboard-Repo')
#import data
#videogamesales_db <- read_excel("video_game_sales_cleaned.xlsx")
videogamesales_db <- readRDS("video_game_sales_cleaned.rds")
##########################################
#libraries
library(shiny)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(knitr)
library(shinythemes)
library(kableExtra)
library(readxl)
library(leaflet)
library(sf)
library(sp)
library(rgdal)
library(plotly)
#data
platform_sales_total_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
platform_sales_average_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_sales_totalavg_sum_db <- platform_sales_total_db %>%
full_join(platform_sales_average_db, by = join_by(release_year, platform, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")  %>%
filter(!Region == "Global")
platform_sales_totalavg_sum_db
platform_sales_total_db
runApp()
runApp()
runApp()
#table
platform_sales_TOP_total_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
#filter(!Region == "Global") %>%
relocate(`Sales`, .before = Region)
platform_sales_TOP_total_db
platform_sales_TOP_average_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
#filter(!Region == "Global") %>%
relocate(`Sales`, .before = Region) %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
platform_sales_TOP_average_db
#return correct dataset based on selection
platform_unitssold_datasetInput_table <- reactive({
req(input$platform_units_sold)
if (input$platform_units_sold == "Total"){
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == input$platform_region_radio) %>%
filter(release_year >= input$platform_UnitsSold_YearRange[1] & release_year <= input$platform_UnitsSold_YearRange[2]) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5)
}
else if (input$units_sold == "Average"){
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_average_db %>%
filter(Region == input$platform_region_radio) %>%
filter(release_year >= input$platform_UnitsSold_YearRange[1] & release_year <= input$platform_UnitsSold_YearRange[2]) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5)
}
return(platform_sales_totalavg_sum_table_df)
})
runApp()
platform_sales_TOP_average_db
platform_sales_TOP_total_db
runApp()
runApp()
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America")
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020)
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`))
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5)
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5)
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
ungroup() %>%
slice_head(n=5)
platform_sales_totalavg_sum_table_df
platform_sales_TOP_total_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
platform_sales_TOP_total_db
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
ungroup() %>%
filter(Region == "North America") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5) %>%
select(-Region)
platform_sales_totalavg_sum_table_df
runApp()
platform_sales_TOP_total_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
#filter(!Region == "Global") %>%
relocate(`Sales`, .before = Region)
platform_sales_TOP_total_db
platform_sales_TOP_average_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarize(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
#filter(!Region == "Global") %>%
relocate(`Sales`, .before = Region) %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
platform_sales_TOP_average_db
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
ungroup() %>%
filter(Region == "Global") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5)
platform_sales_totalavg_sum_table_df
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_total_db %>%
ungroup() %>%
filter(Region == "Global") %>%
filter(release_year >= 2019 & release_year <= 2020) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5) %>%
select(-Region)
platform_sales_totalavg_sum_table_df
runApp()
View(videogamesales_db)
runApp()
runApp()
View(videogamesales_db)
videogamesales_db %>% filter(platform == "PS5")
test <- videogamesales_db %>% filter(platform == "PS5")
View(test)
#data
platform_sales_total_db <- videogamesales_db %>%
group_by(release_year, platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
View(platform_sales_total_db)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
platform_sales_totalavg_sum_table_df <- platform_sales_TOP_average_db %>%
ungroup() %>%
filter(Region == input$platform_region_radio) %>%
filter(release_year >= input$platform_UnitsSold_YearRange[1] & release_year <= input$platform_UnitsSold_YearRange[2]) %>%
arrange(desc(`Sales`)) %>%
slice_head(n=5) %>%
select(-Region) %>%
relocate(platform, .after = Sales)
runApp()
else if (input$units_sold == "Average"){
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##BY REGION
#sales per platform per year
platform_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(sum_global_sales = sum(global_sales),
sum_asia_sales = sum(asia_sales),
sum_namerica_sales = sum(north_american_sales),
sum_europe_sales = sum(european_sales),
sum_japan_sales = sum(japan_sales))
platform_db
ggplot(platform_db)  +
geom_bar(aes(x=platform, y=sum_global_sales, fill = platform), stat='identity') +
labs(title= "Video Game Sales 2000-2020 Globally",
x="Platform",y="Number of Games Sold (in millions)")
platform_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(sum_global_sales = sum(global_sales),
sum_asia_sales = sum(asia_sales),
sum_namerica_sales = sum(north_american_sales),
sum_europe_sales = sum(european_sales),
sum_japan_sales = sum(japan_sales))
platform_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(sum_global_sales = sum(global_sales),
sum_asia_sales = sum(asia_sales),
sum_namerica_sales = sum(north_american_sales),
sum_europe_sales = sum(european_sales),
sum_japan_sales = sum(japan_sales))
platform_unitsperregion_db
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
meanmarise(mean_global_sales = mean(global_sales),
mean_asia_sales = mean(asia_sales),
mean_namerica_sales = mean(north_american_sales),
mean_europe_sales = mean(european_sales),
mean_japan_sales = mean(japan_sales))
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(mean_global_sales = mean(global_sales),
mean_asia_sales = mean(asia_sales),
mean_namerica_sales = mean(north_american_sales),
mean_europe_sales = mean(european_sales),
mean_japan_sales = mean(japan_sales))
platform_avg_unitsperregion_db
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales))
platform_avg_unitsperregion_db
platform_sales_totalavg_sum_db
platform_total_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
platform_total_unitsperregion_db
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_avg_unitsperregion_db
platform_total_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_unitsperregion <- platform_total_unitsperregion_db %>%
full_join(platform_avg_unitsperregion_db, by = join_by(platform, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")
platform_unitsperregion
runApp()
#data
platform_total_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Total Sales")
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Average Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_unitsperregion <- platform_total_unitsperregion_db %>%
full_join(platform_avg_unitsperregion_db, by = join_by(platform, Region)) %>%
rename(`Total` = `Total Sales`,
`Average` = `Average Sales`) %>%
pivot_longer(cols = c(`Total`, `Average`),
names_to = "Metric", values_to = "Sales")
platform_unitsperregion
platform_total_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = sum(global_sales),
Asia = sum(asia_sales),
`North America` = sum(north_american_sales),
Europe = sum(european_sales),
Japan = sum(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales")
platform_total_unitsperregion_db
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Average Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Average Sales`, 2))), digits = 2, format = "f")))
platform_avg_unitsperregion_db <- videogamesales_db %>%
group_by(platform) %>%
summarise(Global = mean(global_sales),
Asia = mean(asia_sales),
`North America` = mean(north_american_sales),
Europe = mean(european_sales),
Japan = mean(japan_sales)) %>%
pivot_longer(cols = c(Global, Asia, `North America`, Europe, Japan),
names_to = "Region", values_to = "Sales") %>%
mutate(`Sales` = as.double(formatC(as.double(as.character(round(`Sales`, 2))), digits = 2, format = "f")))
platform_avg_unitsperregion_db
runApp()
runApp()
